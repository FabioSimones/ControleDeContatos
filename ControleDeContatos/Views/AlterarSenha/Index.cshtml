@using ControleDeContatos.Models.Enums;
@model AlterarSenhaModel
@{
    ViewData["Title"] = "Alterar senha do usuário";
}

@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="close">X</button>
        @TempData["MensagemSucesso"]
    </div>
}

@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="close">X</button>
        @TempData["MensagemErro"]
    </div>
}

<div class="text-center">

    <h1 class="display-4">@ViewData["Title"]</h1>

</div>

<form asp-action="Alterar" asp-controller="AlterarSenha">
    
    <div class="mb-3">
        <label for="senhaAtual" class="form-label">Senha Atual</label>
        <input type="password" asp-for="SenhaAtual" class="form-control" placeholder="Informe o senha atual do usuário.">
        @Html.ValidationMessageFor(x => x.SenhaAtual)
    </div>

    <div class="mb-3">
        <label for="novaSenha" class="form-label">Nova Senha</label>
        <input type="password" asp-for="NovaSenha" class="form-control" placeholder="Informe a nova senha do usuário.">
        @Html.ValidationMessageFor(x => x.NovaSenha)
    </div>
    
    <div class="mb-3">
        <label for="confirmarSenha" class="form-label">Confirmar nova senha</label>
        <input type="password" asp-for="ConfirmarNovaSenha" class="form-control" placeholder="Digite a confirmação da nova senha do usuário.">
        @Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
    </div>

    <button class="btn btn-success btn-block" type="submit">Salvar usuário</button>
    <a class="btn btn-secondary btn-block" asp-action="Index" asp-controller="Home" role="button">Voltar</a>
</form>
