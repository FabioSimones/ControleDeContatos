@using ControleDeContatos.Models.Enums;
@model UsuarioModel
@{
    ViewData["Title"] = "Criar usuário";
}


<div class="text-center">

    <h1 class="display-4">@ViewData["Title"]</h1>

</div>

<form asp-controller="Usuario" asp-action="Criar" method="post">
    <div class="mb-3">
        <label for="nome" class="form-label">Nome</label>
        <input type="text" asp-for="Nome" class="form-control" placeholder="Informe o nome do usuário">
        @Html.ValidationMessageFor(x => x.Nome)
    </div>
    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="text" asp-for="Email" class="form-control" placeholder="Informe o email do usuário">
        @Html.ValidationMessageFor(x => x.Email)
    </div>
    <div class="mb-3">
        <label for="login" class="form-label">Login</label>
        <input type="text" asp-for="Login" class="form-control" placeholder="Informe o login do usuário">
        @Html.ValidationMessageFor(x => x.Login)
    </div>
    <div class="mb-3">
        <label for="senha" class="form-label">Senha</label>
        <input type="password" asp-for="Senha" class="form-control" placeholder="Informe senha do usuário">
        @Html.ValidationMessageFor(x => x.Senha)
    </div>
    <div class="mb-3">
        <label for="perfil" class="form-label">Perfil</label>
        <select asp-for="Perfil" class="form-control">
            <option value="">Selecione</option>
            <option value="@PerfilEnum.Admin">Administrador</option>
            <option value="@PerfilEnum.Padrao">Padrão</option>
        </select>
        @Html.ValidationMessageFor(x => x.Perfil)
    </div>
    <button class="btn btn-success btn-block" type="submit">Salvar usuário</button>
    <a class="btn btn-secondary btn-block" asp-action="Index" asp-controller="Usuario" role="button">Voltar</a>
</form>
